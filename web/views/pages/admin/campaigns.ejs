<%- include('../../partials/header', { user }) %>

<%- include('../../partials/admin-nav', { currentPage: 'campaigns' }) %>

<div class="bg-zinc-950 text-gray-100 min-h-screen">
  <div class="max-w-7xl mx-auto px-4 py-8">
    <div class="mb-6">
      <h1 class="text-3xl font-bold text-[#E31E24]">Campaign Management</h1>
      <p class="text-gray-400">Create and manage clip campaigns</p>
    </div>
    
    <div class="bg-zinc-900 rounded-lg p-6 mb-6">
      <h2 class="text-xl font-bold text-[#E31E24] mb-4">Create New Campaign</h2>
      <form id="createCampaignForm" class="space-y-4">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div>
            <label class="block text-sm font-medium mb-2">Campaign Name</label>
            <input type="text" name="name" required class="w-full bg-zinc-800 border border-zinc-700 rounded px-4 py-2 focus:border-[#E31E24] focus:outline-none">
          </div>
          <div>
            <label class="block text-sm font-medium mb-2">Type</label>
            <select name="type" class="w-full bg-zinc-800 border border-zinc-700 rounded px-4 py-2 focus:border-[#E31E24] focus:outline-none">
              <option value="Clipping">Clipping</option>
              <option value="Reposting">Reposting</option>
              <option value="UGC">UGC</option>
            </select>
          </div>
          <div>
            <label class="block text-sm font-medium mb-2">Rate per 1K Views ($)</label>
            <input type="number" name="rate_per_1k" step="0.01" required class="w-full bg-zinc-800 border border-zinc-700 rounded px-4 py-2 focus:border-[#E31E24] focus:outline-none">
          </div>
          <div>
            <label class="block text-sm font-medium mb-2">Total Budget ($)</label>
            <input type="number" name="budget" step="0.01" required class="w-full bg-zinc-800 border border-zinc-700 rounded px-4 py-2 focus:border-[#E31E24] focus:outline-none">
          </div>
          <div>
            <label class="block text-sm font-medium mb-2">Platforms (comma-separated)</label>
            <input type="text" name="platforms" placeholder="YouTube,TikTok,Instagram" required class="w-full bg-zinc-800 border border-zinc-700 rounded px-4 py-2 focus:border-[#E31E24] focus:outline-none">
          </div>
          <div>
            <label class="block text-sm font-medium mb-2">Content Source (optional)</label>
            <input type="text" name="content_source" placeholder="e.g., @streamername" class="w-full bg-zinc-800 border border-zinc-700 rounded px-4 py-2 focus:border-[#E31E24] focus:outline-none">
          </div>
        </div>
        <div>
          <label class="block text-sm font-medium mb-2">Description</label>
          <textarea name="description" rows="3" required class="w-full bg-zinc-800 border border-zinc-700 rounded px-4 py-2 focus:border-[#E31E24] focus:outline-none"></textarea>
        </div>
        <button type="submit" class="bg-[#E31E24] hover:bg-[#B91419] text-white px-6 py-2 rounded font-semibold">Create Campaign</button>
      </form>
    </div>
    
    <div class="bg-zinc-900 rounded-lg p-6">
      <h2 class="text-xl font-bold text-[#E31E24] mb-4">All Campaigns</h2>
      <div class="overflow-x-auto">
        <table class="w-full">
          <thead>
            <tr class="border-b border-zinc-800">
              <th class="text-left py-3 px-4">Name</th>
              <th class="text-left py-3 px-4">Type</th>
              <th class="text-left py-3 px-4">Rate</th>
              <th class="text-left py-3 px-4">Budget</th>
              <th class="text-left py-3 px-4">Spent</th>
              <th class="text-left py-3 px-4">Status</th>
              <th class="text-left py-3 px-4">Actions</th>
            </tr>
          </thead>
          <tbody>
            <% campaigns.forEach(campaign => { %>
              <tr class="border-b border-zinc-800 hover:bg-zinc-800/50">
                <td class="py-3 px-4 font-medium"><%= campaign.name %></td>
                <td class="py-3 px-4"><%= campaign.type %></td>
                <td class="py-3 px-4">$<%= campaign.rate_per_1k %></td>
                <td class="py-3 px-4">$<%= campaign.total_budget || 0 %></td>
                <td class="py-3 px-4 text-[#E31E24]">$<%= campaign.budget_spent || 0 %></td>
                <td class="py-3 px-4">
                  <span class="px-2 py-1 rounded text-xs <%= campaign.status === 'active' ? 'bg-[#E31E24]' : campaign.status === 'paused' ? 'bg-yellow-600' : 'bg-zinc-700' %>">
                    <%= campaign.status %>
                  </span>
                </td>
                <td class="py-3 px-4 space-x-2">
                  <% if (campaign.status !== 'ended') { %>
                    <% 
                      const platforms = JSON.parse(campaign.platforms || '[]');
                      const platformsStr = platforms.join(',');
                    %>
                    <button 
                      onclick="openEditModal(this)" 
                      data-id="<%= campaign.id %>"
                      data-name="<%= campaign.name %>"
                      data-description="<%= campaign.description || '' %>"
                      data-type="<%= campaign.type %>"
                      data-rate="<%= campaign.rate_per_1k %>"
                      data-budget="<%= campaign.total_budget || 0 %>"
                      data-platforms="<%= platformsStr %>"
                      class="text-blue-500 hover:text-blue-400 text-sm">‚úèÔ∏è Edit</button>
                  <% } %>
                  <% if (campaign.status === 'active') { %>
                    <button onclick="pauseCampaign(<%= campaign.id %>, 'paused')" class="text-yellow-500 hover:text-yellow-400 text-sm">‚è∏ Pause</button>
                    <button onclick="endCampaign(<%= campaign.id %>)" class="text-[#E31E24] hover:text-[#FF4146] text-sm">üõë End</button>
                  <% } else if (campaign.status === 'paused') { %>
                    <button onclick="pauseCampaign(<%= campaign.id %>, 'active')" class="text-green-500 hover:text-green-400 text-sm">‚ñ∂ Resume</button>
                    <button onclick="endCampaign(<%= campaign.id %>)" class="text-[#E31E24] hover:text-[#FF4146] text-sm">üõë End</button>
                  <% } else if (campaign.status === 'ended') { %>
                    <button onclick="deleteCampaign(<%= campaign.id %>)" class="text-red-600 hover:text-red-500 text-sm">üóëÔ∏è Delete</button>
                  <% } %>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
  
  <!-- Edit Campaign Modal -->
  <div id="editModal" class="fixed inset-0 bg-black/70 hidden items-center justify-center z-50">
    <div class="bg-zinc-900 rounded-lg p-8 max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto">
      <h2 class="text-2xl font-bold text-[#E31E24] mb-6">Edit Campaign</h2>
      <form id="editCampaignForm" class="space-y-4">
        <input type="hidden" id="edit_campaign_id">
        
        <div>
          <label class="block text-sm font-medium mb-2">Campaign Name</label>
          <input type="text" id="edit_name" required class="w-full bg-zinc-800 border border-zinc-700 rounded px-4 py-2 focus:border-[#E31E24] focus:outline-none">
        </div>
        
        <div>
          <label class="block text-sm font-medium mb-2">Description</label>
          <textarea id="edit_description" rows="3" required class="w-full bg-zinc-800 border border-zinc-700 rounded px-4 py-2 focus:border-[#E31E24] focus:outline-none"></textarea>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div>
            <label class="block text-sm font-medium mb-2">Type</label>
            <select id="edit_type" class="w-full bg-zinc-800 border border-zinc-700 rounded px-4 py-2 focus:border-[#E31E24] focus:outline-none">
              <option value="Clipping">Clipping</option>
              <option value="Reposting">Reposting</option>
              <option value="UGC">UGC</option>
            </select>
          </div>
          
          <div>
            <label class="block text-sm font-medium mb-2">Rate per 1K Views ($)</label>
            <input type="number" id="edit_rate_per_1k" step="0.01" required class="w-full bg-zinc-800 border border-zinc-700 rounded px-4 py-2 focus:border-[#E31E24] focus:outline-none">
          </div>
          
          <div>
            <label class="block text-sm font-medium mb-2">Total Budget ($)</label>
            <input type="number" id="edit_budget" step="0.01" required class="w-full bg-zinc-800 border border-zinc-700 rounded px-4 py-2 focus:border-[#E31E24] focus:outline-none">
          </div>
          
          <div class="md:col-span-2">
            <label class="block text-sm font-medium mb-2">Platforms (comma-separated)</label>
            <input type="text" id="edit_platforms" placeholder="YouTube,TikTok,Instagram,Twitter" required class="w-full bg-zinc-800 border border-zinc-700 rounded px-4 py-2 focus:border-[#E31E24] focus:outline-none">
          </div>
        </div>
        
        <div class="flex gap-4 mt-6">
          <button type="submit" class="flex-1 bg-[#E31E24] hover:bg-[#B91419] text-white px-6 py-2 rounded font-semibold">Save Changes</button>
          <button type="button" onclick="closeEditModal()" class="px-6 py-2 bg-zinc-700 hover:bg-zinc-600 text-white rounded font-semibold">Cancel</button>
        </div>
      </form>
    </div>
  </div>
  
  <script>
    document.getElementById('createCampaignForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      const formData = new FormData(e.target);
      const data = Object.fromEntries(formData);
      
      const response = await fetch('/admin/campaigns/add', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data)
      });
      
      const result = await response.json();
      alert(result.message || (result.success ? 'Campaign created!' : 'Failed to create campaign'));
      
      if (result.success) {
        window.location.reload();
      }
    });
    
    async function pauseCampaign(id, action) {
      const confirmMsg = action === 'paused' ? 'Pause this campaign?' : 'Resume this campaign?';
      if (!confirm(confirmMsg)) return;
      
      const response = await fetch(`/admin/campaigns/pause/${id}`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ action })
      });
      const result = await response.json();
      alert(result.message || (result.success ? 'Success!' : 'Failed'));
      
      if (result.success) {
        window.location.reload();
      }
    }
    
    async function endCampaign(id) {
      if (!confirm('Are you sure you want to end this campaign? This cannot be undone!')) return;
      
      const response = await fetch(`/admin/campaigns/end/${id}`, { method: 'POST' });
      const result = await response.json();
      alert(result.message || (result.success ? 'Campaign ended!' : 'Failed'));
      
      if (result.success) {
        window.location.reload();
      }
    }
    
    async function deleteCampaign(id) {
      if (!confirm('‚ö†Ô∏è PERMANENTLY DELETE this campaign and all its data?\n\nThis will delete:\n- All submissions\n- All campaign members\n- Campaign history\n\nThis CANNOT be undone!')) return;
      
      const response = await fetch(`/admin/campaigns/delete/${id}`, { method: 'POST' });
      const result = await response.json();
      alert(result.message || (result.success ? 'Campaign deleted!' : 'Failed'));
      
      if (result.success) {
        window.location.reload();
      }
    }
    
    function openEditModal(button) {
      const id = button.dataset.id;
      const name = button.dataset.name;
      const description = button.dataset.description;
      const type = button.dataset.type;
      const rate = button.dataset.rate;
      const budget = button.dataset.budget;
      const platforms = button.dataset.platforms;
      
      document.getElementById('edit_campaign_id').value = id;
      document.getElementById('edit_name').value = name;
      document.getElementById('edit_description').value = description;
      document.getElementById('edit_type').value = type;
      document.getElementById('edit_rate_per_1k').value = rate;
      document.getElementById('edit_budget').value = budget;
      document.getElementById('edit_platforms').value = platforms;
      document.getElementById('editModal').classList.remove('hidden');
      document.getElementById('editModal').classList.add('flex');
    }
    
    function closeEditModal() {
      document.getElementById('editModal').classList.add('hidden');
      document.getElementById('editModal').classList.remove('flex');
    }
    
    document.getElementById('editCampaignForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const id = document.getElementById('edit_campaign_id').value;
      const data = {
        name: document.getElementById('edit_name').value,
        description: document.getElementById('edit_description').value,
        type: document.getElementById('edit_type').value,
        rate_per_1k: parseFloat(document.getElementById('edit_rate_per_1k').value),
        budget: parseFloat(document.getElementById('edit_budget').value),
        platforms: document.getElementById('edit_platforms').value
      };
      
      const response = await fetch(`/admin/campaigns/edit/${id}`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data)
      });
      
      const result = await response.json();
      alert(result.message || (result.success ? 'Campaign updated!' : 'Failed to update campaign'));
      
      if (result.success) {
        closeEditModal();
        window.location.reload();
      }
    });
  </script>
</div>

<%- include('../../partials/footer', { user }) %>
